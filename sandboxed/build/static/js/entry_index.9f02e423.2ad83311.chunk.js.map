{"version":3,"sources":["FilterBookmarks.tsx","entry_index.tsx"],"names":["defaultImage","name","ext","data","baseURL","window","location","origin","includes","FilterBookmarks","state","bg","button","clear","configured","filters","image","label","style","text","useSelectedWS","selectWSList","applyFilters","dashboard","tableau","extensions","dashboardContent","settings","getAll","clearFilters","JSON","parse","filter","skip","worksheetName","filterType","filterOptions","nullOption","dataType","min","Date","max","worksheets","find","ws","applyRangeFilterAsync","fieldName","catch","console","log","applyFilterAsync","appliedValues","updateType","isExcludeMode","forEach","worksheet","getFiltersAsync","then","filtersForWorksheet","filterClearPromises","push","clearFilterAsync","popupUrl","ui","displayDialogAsync","height","width","error","errorCode","ErrorCodes","DialogClosedByUser","message","this","setState","initializeAsync","configure","addEventListener","TableauEventType","SettingsChanged","settingsEvent","updateSettings","newSettings","set","stringify","saveAsync","active","color","rgb","hex","result","exec","b","parseInt","g","r","hexToRgb","Math","floor","css","textButton","className","onClick","backgroundColor","imageButton","src","cursor","maxWidth","objectFit","alt","display","React","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/entry_index.9f02e423.2ad83311.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\n/* tslint:disable:no-console */\r\n\r\ndeclare global {\r\n    interface Window { tableau: any; }\r\n}\r\n\r\ninterface Image {\r\n    name: string;\r\n    ext: string;\r\n    data: string;\r\n}\r\n\r\nconst defaultImage = {\r\n    name: 'default',\r\n    ext: '.png',\r\n    data: 'iVBORw0KGgoAAAANSUhEUgAAAD4AAAAaCAYAAADv/O9kAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH5AMbFhQgjNJxJQAAAPFJREFUWIXtlC8LwlAUR3/+QWEDwTAwiYgIWzKsrwkW04LNYDLbBe1+BIPtZYtV+4JpYYgMk7Bg2kBBNK1NTd47eO98gXMP791bWIT7l59EkAlLM1CULRoA/CRCkXsILlS4bKhw2VDh/8fGqutgQCf8Cu2LlwyMTReibZNqs+D56tUWhOli3eyw6AHmHdf1HoQ5xLxO787BcavAargQZh9TQmsOwlNqcAh3v0xm+sgD/nWL5Y3Wyhoex0dMLicWN0/4PcTo7LGoU2jDnxE2wQE7Umk2hOEeZgGd7Rc5uuq0qHDZUOGyIW+4pRncM5BjaQbeyHkrIkfBCTEAAAAASUVORK5CYII='\r\n}\r\n\r\ninterface State {\r\n    bg: string,\r\n    button: string,\r\n    clear: boolean,\r\n    configured: boolean,\r\n    filters: any[],\r\n    image: Image,\r\n    label: string,\r\n    style: string,\r\n    text: string,\r\n    useSelectedWS: boolean,\r\n    selectWSList: string[]\r\n}\r\n\r\n// Switches base URL based on where extension is being hosted\r\nconst baseURL: string = window.location.origin.includes('localhost:3000') ? window.location.origin : '.';\r\n\r\nfunction hexToRgb(hex: string) {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n        b: parseInt(result[3], 16),\r\n        g: parseInt(result[2], 16),\r\n        r: parseInt(result[1], 16),\r\n    } : null;\r\n}\r\n\r\nclass FilterBookmarks extends React.Component<any, State> {\r\n    public readonly state: State = {\r\n        bg: '#ffffff',\r\n        button: '#2DCC97',\r\n        clear: false,\r\n        configured: false,\r\n        filters: [],\r\n        image: { name: '', ext: '', data: '' },\r\n        label: 'Revert Filters',\r\n        style: 'text',\r\n        text: '#ffffff',\r\n        useSelectedWS: false,\r\n        selectWSList: []\r\n    };\r\n\r\n    // Clears all filters on a dashboard\r\n    public clearFilters() {\r\n        const dashboard = window.tableau.extensions.dashboardContent.dashboard;\r\n        dashboard.worksheets.forEach((worksheet: any) => {\r\n            worksheet.getFiltersAsync().then((filtersForWorksheet: any) => {\r\n                const filterClearPromises: any[] = [];\r\n                filtersForWorksheet.forEach((filter: any) => {\r\n                    filterClearPromises.push(worksheet.clearFilterAsync(filter.fieldName));\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    // Apply the filters set in settings\r\n    public applyFilters = (): void => {\r\n        const dashboard = window.tableau.extensions.dashboardContent.dashboard;\r\n        const settings = window.tableau.extensions.settings.getAll();\r\n        if (settings.clear === 'true') {\r\n            this.clearFilters();\r\n        } else {\r\n            const filters = JSON.parse(settings.filters);\r\n            for (const filter of filters) {\r\n                if (filter.skip === false) {\r\n                    if (!this.state.useSelectedWS || this.state.selectWSList.includes(filter.worksheetName)) {\r\n                        switch (filter.filterType) {\r\n                            case 'range':\r\n                                let filterOptions = {};\r\n                                if (filter.nullOption === 'all-values') {\r\n                                    filterOptions = { nullOption: filter.nullOption };\r\n                                } else if (filter.dataType === 'date') {\r\n                                    filterOptions = { min: filter.min ? new Date(filter.min) : null, max: filter.max ? new Date(filter.max) : null };\r\n                                } else {\r\n                                    filterOptions = { min: filter.min, max: filter.max };\r\n                                }\r\n                                dashboard.worksheets.find((ws: any) => ws.name === filter.worksheetName).applyRangeFilterAsync(filter.fieldName, filterOptions).catch(() => console.log(`Failed to set range filter [${filter.fieldName}] to [${filterOptions}] on worksheet [${filter.worksheetName}]`));\r\n                                break;\r\n                            case 'categorical':\r\n                                dashboard.worksheets.find((ws: any) => ws.name === filter.worksheetName).applyFilterAsync(filter.fieldName, filter.appliedValues, filter.updateType, { isExcludeMode: filter.isExcludeMode }).catch(() => console.log(`Failed to set categorical filter [${filter.fieldName}] to [${filter.appliedValues}] on worksheet [${filter.worksheetName}]`));\r\n                                break;\r\n                            default:\r\n                                continue;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Pops open the configure page\r\n    public configure() {\r\n        const popupUrl = `${baseURL}/config.html`;\r\n        const payload = '';\r\n        window.tableau.extensions.ui.displayDialogAsync(popupUrl, payload, { height: 540, width: 300 }).catch((error: any) => {\r\n            switch (error.errorCode) {\r\n                case window.tableau.ErrorCodes.DialogClosedByUser:\r\n                    console.log('Dialog was closed by user.');\r\n                    break;\r\n                default:\r\n                    console.error(error.message);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Update buttons from configuration settings\r\n    public updateSettings(settings: any) {\r\n        let image = settings.image ? JSON.parse(settings.image) : defaultImage;\r\n        this.setState({\r\n            bg: settings.bg,\r\n            button: settings.button,\r\n            configured: settings.configured === 'true',\r\n            filters: JSON.parse(settings.filters),\r\n            label: settings.label,\r\n            style: settings.style || 'text',\r\n            image,\r\n            text: settings.text,\r\n            useSelectedWS: settings.useSelectedWS === 'true',\r\n            selectWSList: (settings.selectWSList && JSON.parse(settings.selectWSList)) || []\r\n        });\r\n    }\r\n\r\n    // Once we have mounted, we call to initialize\r\n    public componentWillMount() {\r\n        window.tableau.extensions.initializeAsync({ configure: this.configure }).then(() => {\r\n            window.tableau.extensions.settings.addEventListener(window.tableau.TableauEventType.SettingsChanged, (settingsEvent: any) => {\r\n                this.updateSettings(settingsEvent.newSettings)\r\n            });\r\n            const settings = window.tableau.extensions.settings.getAll();\r\n            if (settings.configured === 'true') {\r\n                this.updateSettings(window.tableau.extensions.settings.getAll())\r\n            } else {\r\n                window.tableau.extensions.settings.set('bg', this.state.bg);\r\n                window.tableau.extensions.settings.set('button', this.state.button);\r\n                window.tableau.extensions.settings.set('clear', this.state.clear);\r\n                window.tableau.extensions.settings.set('label', this.state.label);\r\n                window.tableau.extensions.settings.set('image', JSON.stringify(this.state.image));\r\n                window.tableau.extensions.settings.set('style', this.state.style);\r\n                window.tableau.extensions.settings.set('text', this.state.text);\r\n                window.tableau.extensions.settings.set('useSelectedWS', this.state.useSelectedWS);\r\n                window.tableau.extensions.settings.set('selectWSList', JSON.stringify(this.state.selectWSList));\r\n                window.tableau.extensions.settings.saveAsync().then(() => {\r\n                    this.configure();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        let active = '';\r\n        let color = '';\r\n        const rgb = hexToRgb(this.state.button);\r\n        if (rgb) {\r\n            active = `rgb(${Math.floor(rgb.r)}, ${Math.floor(rgb.g)}, ${Math.floor(rgb.b)})`;\r\n            color = `rgba(${Math.floor(rgb.r)}, ${Math.floor(rgb.g)}, ${Math.floor(rgb.b)}, .8)`;\r\n        }\r\n        const css = `\r\n            button.button:active {\r\n                background-color: ${active} !important;\r\n            }\r\n        `\r\n\r\n        const textButton = <button className='button' onClick={this.applyFilters} style={{ backgroundColor: color, color: this.state.text }}>{this.state.label}</button>;\r\n\r\n        const imageButton = <img src={this.state.image.data !== '' ? `data:image/png;base64, ${this.state.image.data}` : `data:image/png;base64, ${defaultImage.data}`} style={{ cursor: 'pointer', maxWidth: '100%', objectFit: 'contain' }} onClick={this.applyFilters} alt='Filter' />;\r\n\r\n        return (\r\n            <div className='outer' style={{ backgroundColor: this.state.bg, display: this.state.configured ? 'flex' : 'none' }}>\r\n                <div className='inner'>\r\n                    <style>{css}</style>\r\n                    {this.state.style === \"image\" ? imageButton : textButton}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterBookmarks;\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport FilterBookmarks from './FilterBookmarks';\r\nimport './style.css';\r\n\r\nReactDOM.render(<FilterBookmarks />, document.getElementById('container'));\r\n"],"sourceRoot":""}